<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.parasoft</groupId>
  <artifactId>parabank</artifactId>
  <version>4.0.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>ParaBank Sample Project</name>
  <description>ParaBank Sample Project for use with Parasoft SOAtest and Virtualize</description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
    <maven-assembly-plugin.version>3.7.0</maven-assembly-plugin.version>
    <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
    <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
    <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
    <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
    <cargo-maven3-plugin.version>1.10.12</cargo-maven3-plugin.version>
    <soatest-maven-plugin.version>1.0.0</soatest-maven-plugin.version>
    <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
    <dependency-check-maven.version>9.0.10</dependency-check-maven.version>
    <phase.start-container>pre-integration-test</phase.start-container>
    <phase.stop-container>post-integration-test</phase.stop-container>
    <jax-activation.version>1.2.2</jax-activation.version>
    <jax-annotation.version>1.3.5</jax-annotation.version>
    <jax-jws.version>2.1.0</jax-jws.version>
    <jax-rs.version>2.1.6</jax-rs.version>
    <jax-soap.version>1.4.2</jax-soap.version>
    <jax-ws.version>2.3.3</jax-ws.version>
    <jaxb.version>2.3.3</jaxb.version>
    <jaxb.impl.version>2.3.9</jaxb.impl.version>
    <istack.version>3.0.12</istack.version>
    <joda-time.version>2.12.7</joda-time.version>
    <!-- ActiveMQ 5.17 and later requires Java 11 -->
    <activemq.version>5.17.6</activemq.version>
    <swagger-jaxrs.version>1.6.13</swagger-jaxrs.version>
    <servlet.version>3.1.0</servlet.version>
    <junit.version>4.13.2</junit.version>
    <jstl.version>1.2.5</jstl.version>
    <hsqldb.version>2.7.2</hsqldb.version>
    <commons-dbcp2.version>2.12.0</commons-dbcp2.version>
    <aspectjweaver.version>1.9.21.2</aspectjweaver.version>
    <jackson.version>2.17.0</jackson.version>
    <woodstox.version>6.6.1</woodstox.version>
    <slf4j.version>2.0.12</slf4j.version>
    <log4j.version>2.23.1</log4j.version>
    <commons-io.version>2.15.1</commons-io.version>
    <commons-codec.version>1.16.1</commons-codec.version>
    <!-- WireMock 3.0 and later requires Java 11 -->
    <wiremock.version>3.0.3</wiremock.version>
    <!-- Mockito 5.0 and later requires Java 11 -->
    <mockito.version>5.0.0</mockito.version>
    <bytebuddy.version>1.14.12</bytebuddy.version>
    <!-- CXF 3.6 and later requires Java 11 -->
    <cxf.version>3.6.3</cxf.version>
    <cxf.wss4j.version>2.4.3</cxf.wss4j.version>
    <saaj-impl.version>1.5.3</saaj-impl.version>
    <jersey.version>2.41</jersey.version>
    <javassist.version>3.30.2-GA</javassist.version>
    <spring.version>5.3.33</spring.version>
    <junitparams.version>1.1.1</junitparams.version>
    <hamcrest.version>2.2</hamcrest.version>
    <bcprov.version>1.77</bcprov.version>
    <angularjs.version>1.8.3</angularjs.version>
    <guava.version>33.1.0-jre</guava.version>
    <snakeyaml.version>2.2</snakeyaml.version>
    <!-- Selenium 4.14 and later requires Java 11 -->
    <selenium.version>4.14.1</selenium.version>
    <selenium.latest.version>4.18.1</selenium.latest.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-bom</artifactId>
        <version>${mockito.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>${bytebuddy.version}</version>
      </dependency>
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy-agent</artifactId>
        <version>${bytebuddy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-bom</artifactId>
        <version>${cxf.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.wss4j</groupId>
        <artifactId>wss4j-ws-security-dom</artifactId>
        <version>${cxf.wss4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.wss4j</groupId>
        <artifactId>wss4j-policy</artifactId>
        <version>${cxf.wss4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.wss4j</groupId>
        <artifactId>wss4j-ws-security-stax</artifactId>
        <version>${cxf.wss4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.wss4j</groupId>
        <artifactId>wss4j-ws-security-policy-stax</artifactId>
        <version>${cxf.wss4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.messaging.saaj</groupId>
        <artifactId>saaj-impl</artifactId>
        <version>${saaj-impl.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${javassist.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Spring dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>

    <!-- Security Database JSON, XML, etc -->
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
      <version>${jax-activation.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.activation</groupId>
      <artifactId>jakarta.activation</artifactId>
      <version>${jax-activation.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <version>${jax-annotation.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.jws</groupId>
      <artifactId>jakarta.jws-api</artifactId>
      <version>${jax-jws.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>${jax-rs.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.soap</groupId>
      <artifactId>jakarta.xml.soap-api</artifactId>
      <version>${jax-soap.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.ws</groupId>
      <artifactId>jakarta.xml.ws-api</artifactId>
      <version>${jax-ws.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>${jaxb.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>${jaxb.impl.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>txw2</artifactId>
      <version>${jaxb.impl.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.istack</groupId>
      <artifactId>istack-commons-runtime</artifactId>
      <version>${istack.version}</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsqldb.version}</version>
      <classifier>jdk8</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>${commons-dbcp2.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk18on</artifactId>
      <version>${bcprov.version}</version>
    </dependency>

    <!-- SWAGGER Dependencies -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
      <version>${swagger-jaxrs.version}</version>
      <exclusions>
        <!-- redundant to jakarta.ws.rs-api -->
        <exclusion>
          <groupId>javax.ws.rs</groupId>
          <artifactId>javax.ws.rs-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- CXF Dependencies -->
    <!--Conflicting jaxb version so exclude it-->
    <dependency>
      <groupId>org.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>3.10.8</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.jaxb</groupId>
          <artifactId>jaxb-runtime</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.messaging.saaj</groupId>
      <artifactId>saaj-impl</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-wsdl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
    </dependency>
    <!--We explictiy pull in org.ehcache to prevent transitive conflicts -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-ws-security</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.ehcache</groupId>
          <artifactId>ehcache</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-providers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-service-description</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-service-description-swagger</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-security-cors</artifactId>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectjweaver.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.woodstox</groupId>
      <artifactId>woodstox-core</artifactId>
      <version>${woodstox.version}</version>
    </dependency>

    <!-- servlet dependencies -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.taglibs</groupId>
      <artifactId>taglibs-standard-jstlel</artifactId>
      <version>${jstl.version}</version>
    </dependency>

    <!-- ActiveMQ -->
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-client</artifactId>
      <version>${activemq.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
      <version>${activemq.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-spring</artifactId>
      <version>${activemq.version}</version>
    </dependency>

    <!-- guava is used by activemq, swagger, wiremock, others -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
      <exclusions>
        <!-- see https://github.com/google/guava/issues/2824 -->
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>failureaccess</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>listenablefuture</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.errorprone</groupId>
          <artifactId>error_prone_annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.j2objc</groupId>
          <artifactId>j2objc-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Web front-end libraries -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>angularjs</artifactId>
      <version>${angularjs.version}</version>
    </dependency>

    <!-- Testing dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <version>${junitparams.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.9.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <runOrder>alphabetical</runOrder>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven3-plugin</artifactId>
          <version>${cargo-maven3-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${dependency-check-maven.version}</version>
          <configuration>
            <format>ALL</format>
            <skipProvidedScope>true</skipProvidedScope>
            <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <testResources>
      <testResource>
        <directory>src/main/webapp/WEB-INF</directory>
        <includes>
          <include>parabank-servlet.xml</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- versions:display-plugin-updates calculates our minimum
                  Maven requirement. This minimum requirement should be updated
                  as needed as we update versions of our Maven plugins. -->
                <requireMavenVersion>
                  <version>3.6.3</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-parabank-war-for-deployment</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>install</phase>
            <configuration>
              <target>
                <echo
                    message="making a copy for deployment: ${project.build.directory}/${project.artifactId}.${project.packaging} " />
                <copy overwrite="true" verbose="true" toDir="${project.build.directory}">
                  <fileset dir="${project.build.directory}">
                    <include name="${project.build.finalName}.${project.packaging}" />
                  </fileset>
                  <globmapper from="${project.build.finalName}.${project.packaging}"
                      to="${project.artifactId}.${project.packaging}" />
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-soavirt-source</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/sources-jst_web.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven3-plugin</artifactId>
        <configuration>
          <container>
            <containerId>tomcat9x</containerId>
            <artifactInstaller>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat</artifactId>
              <version>9.0.87</version>
            </artifactInstaller>
            <timeout>600000</timeout>
          </container>
        </configuration>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>${phase.start-container}</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>${phase.stop-container}</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <pluginRepositories>
    <pluginRepository>
      <id>Parasoft</id>
      <url>https://build.parasoft.com/maven/</url>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>soatest-it</id>
      <properties>
        <!-- default values of user properties for soatest-maven-plugin -->
        <soatest.config>soatest.builtin://Demo Configuration</soatest.config>
        <soatest.data>${project.build.directory}/soatest/workspace</soatest.data>
        <soatest.fail>false</soatest.fail>
        <soatest.import>${project.basedir}/soatest/TestAssets</soatest.import>
        <soatest.settings>${project.build.directory}/soatest/localsettings.properties</soatest.settings>
        <soatest.report>${project.build.directory}/soatest/reports/report.html</soatest.report>
        <soatest.resources>/TestAssets/Smoke.tst</soatest.resources>

        <!-- override on Maven command line if you are on Windows or otherwise can't use the docker image -->
        <soatest.home>${project.basedir}/soatest/docker</soatest.home>

        <!-- set to true on Maven command line if you accept the EULA: https://www.parasoft.com/license -->
        <parasoft.eula.accepted>false</parasoft.eula.accepted>

        <!-- set to true on Maven command line to opt-in to telemetry -->
        <parasoft.localsettings.usage.reporting.enabled>false</parasoft.localsettings.usage.reporting.enabled>

        <!-- DTP/LS/license settings which can be set on Maven command line -->
        <parasoft.localsettings.dtp.enabled>false</parasoft.localsettings.dtp.enabled>
        <parasoft.localsettings.dtp.url></parasoft.localsettings.dtp.url>
        <parasoft.localsettings.dtp.user></parasoft.localsettings.dtp.user>
        <parasoft.localsettings.dtp.password></parasoft.localsettings.dtp.password>
        <parasoft.localsettings.license.network.use.specified.server>false</parasoft.localsettings.license.network.use.specified.server>
        <parasoft.localsettings.license.network.url></parasoft.localsettings.license.network.url>
        <parasoft.localsettings.license.network.auth.enabled>false</parasoft.localsettings.license.network.auth.enabled>
        <parasoft.localsettings.license.network.user></parasoft.localsettings.license.network.user>
        <parasoft.localsettings.license.network.password></parasoft.localsettings.license.network.password>
        <parasoft.localsettings.soatest.license.use_network>true</parasoft.localsettings.soatest.license.use_network>
        <parasoft.localsettings.soatest.license.network.edition>automation_edition</parasoft.localsettings.soatest.license.network.edition>
        <parasoft.localsettings.soatest.license.custom_edition_features></parasoft.localsettings.soatest.license.custom_edition_features>
        <parasoft.localsettings.soatest.license.local.password></parasoft.localsettings.soatest.license.local.password>
        <parasoft.localsettings.report.test_suites_only>false</parasoft.localsettings.report.test_suites_only>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>soatest-settings</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <target>
                    <!-- create dirs and assets -->
                    <mkdir dir="${project.build.directory}/soatest" />
                    <mkdir dir="${project.build.directory}/soatest/jdbc" />
                    <mkdir dir="${project.build.directory}/soatest/reports" />
                    <mkdir dir="${project.build.directory}/soatest/workspace" />
                    <copy file="${org.hsqldb:hsqldb:jar:jdk8}" tofile="${project.build.directory}/soatest/jdbc/hsqldb-jdk8.jar" />
                    <!-- create settings file -->
                    <propertyfile file="${soatest.settings}">
                      <entry key="parasoft.eula.accepted" value="${parasoft.eula.accepted}" />
                      <entry key="parasoft.localsettings.usage.reporting.enabled" value="${parasoft.localsettings.usage.reporting.enabled}" />
                      <entry key="dtp.enabled" value="${parasoft.localsettings.dtp.enabled}" />
                      <entry key="dtp.url" value="${parasoft.localsettings.dtp.url}" />
                      <entry key="dtp.user" value="${parasoft.localsettings.dtp.user}" />
                      <entry key="dtp.password" value="${parasoft.localsettings.dtp.password}" />
                      <entry key="license.network.use.specified.server" value="${parasoft.localsettings.license.network.use.specified.server}" />
                      <entry key="license.network.url" value="${parasoft.localsettings.license.network.url}" />
                      <entry key="license.network.auth.enabled" value="${parasoft.localsettings.license.network.auth.enabled}" />
                      <entry key="license.network.user" value="${parasoft.localsettings.license.network.user}" />
                      <entry key="license.network.password" value="${parasoft.localsettings.license.network.password}" />
                      <entry key="soatest.license.use_network" value="${parasoft.localsettings.soatest.license.use_network}" />
                      <entry key="soatest.license.network.edition" value="${parasoft.localsettings.soatest.license.network.edition}" />
                      <entry key="soatest.license.custom_edition_features" value="${parasoft.localsettings.soatest.license.custom_edition_features}" />
                      <entry key="soatest.license.local.password" value="${parasoft.localsettings.soatest.license.local.password}" />
                      <entry key="report.test_suites_only" value="${parasoft.localsettings.report.test_suites_only}" />
                      <entry key="datasources.jdbc.classpath" value="${project.build.directory}/soatest/jdbc/hsqldb-jdk8.jar" />
                    </propertyfile>
                    <!-- make everything accessible to the docker container -->
                    <chmod dir="${project.build.directory}/soatest" perm="go+rw" />
                    <chmod dir="${project.build.directory}/soatest/jdbc" perm="go+rw" />
                    <chmod dir="${project.build.directory}/soatest/reports" perm="go+rw" />
                    <chmod dir="${project.build.directory}/soatest/workspace" perm="go+rw" />
                    <chmod dir="${project.build.directory}/soatest" perm="go+rw" includes="**" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.parasoft</groupId>
            <artifactId>soatest-maven-plugin</artifactId>
            <version>${soatest-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>soatest-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>soatest</goal>
                </goals>
                <configuration>
                  <config>${soatest.config}</config>
                  <data>${soatest.data}</data>
                  <fail>${soatest.fail}</fail>
                  <settings>${soatest.settings}</settings>
                  <report>${soatest.report}</report>
                  <soatestHome>${soatest.home}</soatestHome>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java-11</id>
      <activation>
          <jdk>[11,)</jdk>
      </activation>
      <properties>
          <selenium.version>${selenium.latest.version}</selenium.version>
      </properties>
    </profile>
  </profiles>

</project>
